{"version":3,"sources":["pages/signUp.js","pages/signIn.js","App.js","serviceWorker.js","index.js"],"names":["signUp","signUpAction","e","preventDefault","console","log","axios","post","state","then","response","data","alert","fullName","catch","error","emailId","password","hasAgreed","handleChange","bind","handleSubmit","target","value","type","checked","name","this","setState","className","onSubmit","htmlFor","id","placeholder","onChange","href","Link","to","Component","signIn","email","App","basename","NavLink","activeClassName","exact","Route","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6220bf01.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport axios from 'axios';\nconst API_URL=\"http://localhost:8080\"\nclass signUp extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            emailId: '',\n            password: '',\n            fullName: '',\n            hasAgreed: false\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(e) {\n        let target = e.target;\n        let value = target.type === 'checkbox' ? target.checked : target.value;\n        let name = target.name;\n\n        this.setState({\n          [name]: value\n        });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n\n        console.log('The form was submitted with the following data:');\n        console.log(this.state);\n    }\n\n\n\n\n\n   signUpAction = e => {\n    e.preventDefault();\nconsole.log(\"submitted\");\naxios.post('http://10.235.193.33:8088/demo_war_exploded/api/register', this.state).then(response => {\nif(response.data!=null)\n{\n    alert(\"Hello \"+this.state.fullName +\"!\" + \"You are now registered on our portal\");\n    alert(\"Please sign in with your credentials\");\n}\nelse\n{\nalert(\"User not Registed:Error\");\n\n\n}\n})\n.catch(error =>{\n    console.log(error);\n    alert(error);\n})\n\n\n\n}\n\n\n        \n    \n\n    render() {\n        return (\n        <div className=\"FormCenter\">\n            <form  onSubmit={this.signUpAction}  className=\"FormFields\">\n              <div className=\"FormField\">\n                <label className=\"FormField__Label\" htmlFor=\"name\">Full Name</label>\n                <input type=\"text\" id=\"name\" className=\"FormField__Input\" placeholder=\"Enter your full name\" name=\"fullName\" value={this.state.fullName} onChange={this.handleChange} />\n              </div>\n              <div className=\"FormField\">\n                <label className=\"FormField__Label\" htmlFor=\"password\">Password</label>\n                <input type=\"password\" id=\"password\" className=\"FormField__Input\" placeholder=\"Enter your password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n              </div>\n              <div className=\"FormField\">\n                <label className=\"FormField__Label\" htmlFor=\"email\">E-Mail Address</label>\n                <input type=\"email\" id=\"email\" className=\"FormField__Input\" placeholder=\"Enter your email\" name=\"emailId\" value={this.state.emailId} onChange={this.handleChange} />\n              </div>\n\n              <div className=\"FormField\">\n                <label className=\"FormField__CheckboxLabel\">\n                    <input className=\"FormField__Checkbox\" type=\"checkbox\" name=\"hasAgreed\" value={this.state.hasAgreed} onChange={this.handleChange} /> I agree all statements in <a href=\"\" className=\"FormField__TermsLink\">terms of service</a>\n                </label>\n              </div>\n\n              <div className=\"FormField\">\n                  <button className=\"FormField__Button mr-20\"  type=\"submit\" >Sign Up</button> \n                  \n                  \n                  \n                  <Link to=\"/sign-in\" className=\"FormField__Link\">I'm already member</Link>\n              </div>\n            </form>\n          </div>\n        );\n    }\n}\n\nexport default signUp;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass signIn extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            email: '',\n            password: ''\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(e) {\n        let target = e.target;\n        let value = target.type === 'checkbox' ? target.checked : target.value;\n        let name = target.name;\n\n        this.setState({\n          [name]: value\n        });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n\n        console.log('The form was submitted with the following data:');\n        console.log(this.state);\n    }\n\n    render() {\n        return (\n        <div className=\"FormCenter\">\n            <form onSubmit={this.handleSubmit} className=\"FormFields\" onSubmit={this.handleSubmit}>\n            <div className=\"FormField\">\n                <label className=\"FormField__Label\" htmlFor=\"email\">E-Mail Address</label>\n                <input type=\"email\" id=\"email\" className=\"FormField__Input\" placeholder=\"Enter your email\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\n              </div>\n\n              <div className=\"FormField\">\n                <label className=\"FormField__Label\" htmlFor=\"password\">Password</label>\n                <input type=\"password\" id=\"password\" className=\"FormField__Input\" placeholder=\"Enter your password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n              </div>\n\n              <div className=\"FormField\">\n                  <button className=\"FormField__Button mr-20\">Sign In</button> <Link to=\"/\" className=\"FormField__Link\">Create an account</Link>\n              </div>\n            </form>\n          </div>\n        );\n    }\n}\n\nexport default signIn;","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Link, NavLink } from 'react-router-dom';\nimport signUp from './pages/signUp';\nimport signIn from './pages/signIn';\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router basename=\"/react-auth-ui/\">\n        <div className=\"App\">\n          <div className=\"App__Aside\"></div>\n          <div className=\"App__Form\">\n            <div className=\"PageSwitcher\">\n                <NavLink to=\"/sign-in\" activeClassName=\"PageSwitcher__Item--Active\" className=\"PageSwitcher__Item\">Sign In</NavLink>\n                <NavLink exact to=\"/\" activeClassName=\"PageSwitcher__Item--Active\" className=\"PageSwitcher__Item\">Sign Up</NavLink>\n              </div>\n\n              <div className=\"FormTitle\">\n                  <NavLink to=\"/sign-in\" activeClassName=\"FormTitle__Link--Active\" className=\"FormTitle__Link\">Sign In</NavLink> or <NavLink exact to=\"/\" activeClassName=\"FormTitle__Link--Active\" className=\"FormTitle__Link\">Sign Up</NavLink>\n              </div>\n\n              <Route exact path=\"/\" component={signUp}>\n              </Route>\n              <Route path=\"/sign-in\" component={signIn}>\n              </Route>\n          </div>\n\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker();"],"sourceRoot":""}